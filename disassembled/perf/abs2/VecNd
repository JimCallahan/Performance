Compiled from "VecNd.scala"
public class perf.abs2.VecNd implements perf.abs2.VecOps$mcD$sp<perf.abs2.VecNd>, perf.abs2.Vector, scala.ScalaObject {
  public static final perf.abs2.VecNd randomUnit(int);
    Code:
       0: getstatic     #11                 // Field perf/abs2/VecNd$.MODULE$:Lperf/abs2/VecNd$;
       3: iload_0       
       4: invokevirtual #13                 // Method perf/abs2/VecNd$.randomUnit:(I)Lperf/abs2/VecNd;
       7: areturn       

  public static final perf.abs2.VecNd random(int);
    Code:
       0: getstatic     #11                 // Field perf/abs2/VecNd$.MODULE$:Lperf/abs2/VecNd$;
       3: iload_0       
       4: invokevirtual #16                 // Method perf/abs2/VecNd$.random:(I)Lperf/abs2/VecNd;
       7: areturn       

  public int dot$mcI$sp(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #26                 // Method perf/abs2/VecOps$class.dot$mcI$sp:(Lperf/abs2/VecOps;Lperf/abs2/Tuple;)I
       5: ireturn       

  public int magSq$mcI$sp();
    Code:
       0: aload_0       
       1: invokestatic  #36                 // Method perf/abs2/VecOps$class.magSq$mcI$sp:(Lperf/abs2/VecOps;)I
       4: ireturn       

  public int mag$mcI$sp();
    Code:
       0: aload_0       
       1: invokestatic  #39                 // Method perf/abs2/VecOps$class.mag$mcI$sp:(Lperf/abs2/VecOps;)I
       4: ireturn       

  public perf.abs2.Tuple $plus$mcI$sp(int);
    Code:
       0: aload_0       
       1: iload_1       
       2: invokestatic  #46                 // Method perf/abs2/TupleOps$class.$plus$mcI$sp:(Lperf/abs2/TupleOps;I)Lperf/abs2/Tuple;
       5: areturn       

  public perf.abs2.Tuple $minus$mcI$sp(int);
    Code:
       0: aload_0       
       1: iload_1       
       2: invokestatic  #51                 // Method perf/abs2/TupleOps$class.$minus$mcI$sp:(Lperf/abs2/TupleOps;I)Lperf/abs2/Tuple;
       5: areturn       

  public perf.abs2.Tuple $times$mcI$sp(int);
    Code:
       0: aload_0       
       1: iload_1       
       2: invokestatic  #54                 // Method perf/abs2/TupleOps$class.$times$mcI$sp:(Lperf/abs2/TupleOps;I)Lperf/abs2/Tuple;
       5: areturn       

  public perf.abs2.Tuple $div$mcI$sp(int);
    Code:
       0: aload_0       
       1: iload_1       
       2: invokestatic  #57                 // Method perf/abs2/TupleOps$class.$div$mcI$sp:(Lperf/abs2/TupleOps;I)Lperf/abs2/Tuple;
       5: areturn       

  public perf.abs2.VecNd map$mcI$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #62                 // Method perf/abs2/TupleOps$class.map$mcI$sp:(Lperf/abs2/TupleOps;Lscala/Function1;)Lperf/abs2/Tuple;
       5: areturn       

  public int reduce$mcI$sp(scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #71                 // Method perf/abs2/TupleOps$class.reduce$mcI$sp:(Lperf/abs2/TupleOps;Lscala/Function2;)I
       5: ireturn       

  public perf.abs2.VecNd compwise$mcI$sp(perf.abs2.VecNd, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: aload_2       
       3: invokestatic  #78                 // Method perf/abs2/TupleOps$class.compwise$mcI$sp:(Lperf/abs2/TupleOps;Lperf/abs2/Tuple;Lscala/Function2;)Lperf/abs2/Tuple;
       6: areturn       

  public double[] elems();
    Code:
       0: aload_0       
       1: getfield      #84                 // Field elems:[D
       4: areturn       

  public int dimens();
    Code:
       0: aload_0       
       1: invokevirtual #87                 // Method elems:()[D
       4: arraylength   
       5: ireturn       

  public double apply(int);
    Code:
       0: aload_0       
       1: invokevirtual #87                 // Method elems:()[D
       4: iload_1       
       5: daload        
       6: dreturn       

  public perf.abs2.VecNd update(int, double);
    Code:
       0: getstatic     #97                 // Field scala/Array$.MODULE$:Lscala/Array$;
       3: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1      
       7: newarray       double
       9: dup           
      10: iconst_0      
      11: aload_0       
      12: invokevirtual #104                // Method dimens:()I
      15: i2d           
      16: dastore       
      17: invokevirtual #108                // Method scala/Predef$.wrapDoubleArray:([D)Lscala/collection/mutable/WrappedArray;
      20: getstatic     #113                // Field scala/reflect/Manifest$.MODULE$:Lscala/reflect/Manifest$;
      23: invokevirtual #117                // Method scala/reflect/Manifest$.Double:()Lscala/reflect/AnyValManifest;
      26: invokevirtual #120                // Method scala/Array$.apply:(Lscala/collection/Seq;Lscala/reflect/ClassManifest;)Ljava/lang/Object;
      29: checkcast     #121                // class "[D"
      32: astore        4
      34: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      37: iconst_0      
      38: invokevirtual #125                // Method scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
      41: aload_0       
      42: invokevirtual #104                // Method dimens:()I
      45: invokevirtual #131                // Method scala/runtime/RichInt.until:(I)Lscala/collection/immutable/Range;
      48: new           #133                // class perf/abs2/VecNd$$anonfun$update$1
      51: dup           
      52: aload_0       
      53: iload_1       
      54: dload_2       
      55: aload         4
      57: invokespecial #137                // Method perf/abs2/VecNd$$anonfun$update$1."<init>":(Lperf/abs2/VecNd;ID[D)V
      60: invokevirtual #143                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
      63: new           #82                 // class perf/abs2/VecNd
      66: dup           
      67: aload         4
      69: invokespecial #146                // Method "<init>":([D)V
      72: areturn       

  public double magSq();
    Code:
       0: aload_0       
       1: invokevirtual #155                // Method magSq$mcD$sp:()D
       4: dreturn       

  public double mag();
    Code:
       0: aload_0       
       1: invokevirtual #159                // Method mag$mcD$sp:()D
       4: dreturn       

  public perf.abs2.VecNd normalized();
    Code:
       0: aload_0       
       1: aload_0       
       2: invokevirtual #159                // Method mag$mcD$sp:()D
       5: invokevirtual #165                // Method $div$mcD$sp:(D)Lperf/abs2/VecNd;
       8: areturn       

  public double dot(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #170                // Method dot$mcD$sp:(Lperf/abs2/VecNd;)D
       5: dreturn       

  public perf.abs2.VecNd $plus(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_1       
       2: new           #174                // class perf/abs2/VecNd$$anonfun$$plus$1
       5: dup           
       6: aload_0       
       7: invokespecial #177                // Method perf/abs2/VecNd$$anonfun$$plus$1."<init>":(Lperf/abs2/VecNd;)V
      10: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $minus(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_1       
       2: new           #184                // class perf/abs2/VecNd$$anonfun$$minus$1
       5: dup           
       6: aload_0       
       7: invokespecial #185                // Method perf/abs2/VecNd$$anonfun$$minus$1."<init>":(Lperf/abs2/VecNd;)V
      10: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $times(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_1       
       2: new           #188                // class perf/abs2/VecNd$$anonfun$$times$1
       5: dup           
       6: aload_0       
       7: invokespecial #189                // Method perf/abs2/VecNd$$anonfun$$times$1."<init>":(Lperf/abs2/VecNd;)V
      10: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $div(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_1       
       2: new           #192                // class perf/abs2/VecNd$$anonfun$$div$1
       5: dup           
       6: aload_0       
       7: invokespecial #193                // Method perf/abs2/VecNd$$anonfun$$div$1."<init>":(Lperf/abs2/VecNd;)V
      10: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $plus(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #196                // Method $plus$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.VecNd $minus(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #199                // Method $minus$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.VecNd $times(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #202                // Method $times$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.VecNd $div(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #165                // Method $div$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.VecNd map(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
       5: areturn       

  public double reduce(scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #212                // Method reduce$mcD$sp:(Lscala/Function2;)D
       5: dreturn       

  public perf.abs2.VecNd compwise(perf.abs2.VecNd, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: aload_1       
       2: aload_2       
       3: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
       6: areturn       

  public double magSq$mcD$sp();
    Code:
       0: aload_0       
       1: aload_0       
       2: invokevirtual #170                // Method dot$mcD$sp:(Lperf/abs2/VecNd;)D
       5: dreturn       

  public double mag$mcD$sp();
    Code:
       0: getstatic     #219                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: aload_0       
       4: invokevirtual #155                // Method magSq$mcD$sp:()D
       7: invokevirtual #223                // Method scala/math/package$.sqrt:(D)D
      10: dreturn       

  public double dot$mcD$sp(perf.abs2.VecNd);
    Code:
       0: aload_0       
       1: aload_0       
       2: new           #225                // class perf/abs2/VecNd$$anonfun$dot$mcD$sp$1
       5: dup           
       6: aload_0       
       7: invokespecial #226                // Method perf/abs2/VecNd$$anonfun$dot$mcD$sp$1."<init>":(Lperf/abs2/VecNd;)V
      10: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
      13: new           #228                // class perf/abs2/VecNd$$anonfun$dot$mcD$sp$2
      16: dup           
      17: aload_0       
      18: invokespecial #229                // Method perf/abs2/VecNd$$anonfun$dot$mcD$sp$2."<init>":(Lperf/abs2/VecNd;)V
      21: invokevirtual #212                // Method reduce$mcD$sp:(Lscala/Function2;)D
      24: dreturn       

  public perf.abs2.VecNd $plus$mcD$sp(double);
    Code:
       0: aload_0       
       1: new           #231                // class perf/abs2/VecNd$$anonfun$$plus$mcD$sp$1
       4: dup           
       5: aload_0       
       6: dload_1       
       7: invokespecial #234                // Method perf/abs2/VecNd$$anonfun$$plus$mcD$sp$1."<init>":(Lperf/abs2/VecNd;D)V
      10: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $minus$mcD$sp(double);
    Code:
       0: aload_0       
       1: new           #237                // class perf/abs2/VecNd$$anonfun$$minus$mcD$sp$1
       4: dup           
       5: aload_0       
       6: dload_1       
       7: invokespecial #238                // Method perf/abs2/VecNd$$anonfun$$minus$mcD$sp$1."<init>":(Lperf/abs2/VecNd;D)V
      10: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $times$mcD$sp(double);
    Code:
       0: aload_0       
       1: new           #241                // class perf/abs2/VecNd$$anonfun$$times$mcD$sp$1
       4: dup           
       5: aload_0       
       6: dload_1       
       7: invokespecial #242                // Method perf/abs2/VecNd$$anonfun$$times$mcD$sp$1."<init>":(Lperf/abs2/VecNd;D)V
      10: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd $div$mcD$sp(double);
    Code:
       0: aload_0       
       1: new           #245                // class perf/abs2/VecNd$$anonfun$$div$mcD$sp$1
       4: dup           
       5: aload_0       
       6: dload_1       
       7: invokespecial #246                // Method perf/abs2/VecNd$$anonfun$$div$mcD$sp$1."<init>":(Lperf/abs2/VecNd;D)V
      10: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
      13: areturn       

  public perf.abs2.VecNd map$mcD$sp(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #82                 // class perf/abs2/VecNd
       3: dup           
       4: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0       
       8: invokevirtual #87                 // Method elems:()[D
      11: invokevirtual #251                // Method scala/Predef$.doubleArrayOps:([D)Lscala/collection/mutable/ArrayOps;
      14: aload_1       
      15: getstatic     #97                 // Field scala/Array$.MODULE$:Lscala/Array$;
      18: getstatic     #113                // Field scala/reflect/Manifest$.MODULE$:Lscala/reflect/Manifest$;
      21: invokevirtual #117                // Method scala/reflect/Manifest$.Double:()Lscala/reflect/AnyValManifest;
      24: invokevirtual #255                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassManifest;)Lscala/collection/generic/CanBuildFrom;
      27: invokeinterface #260,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      32: checkcast     #121                // class "[D"
      35: invokespecial #146                // Method "<init>":([D)V
      38: areturn       

  public double reduce$mcD$sp(scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0       
       4: invokevirtual #87                 // Method elems:()[D
       7: invokevirtual #251                // Method scala/Predef$.doubleArrayOps:([D)Lscala/collection/mutable/ArrayOps;
      10: aload_1       
      11: invokeinterface #265,  2          // InterfaceMethod scala/collection/TraversableOnce.reduce:(Lscala/Function2;)Ljava/lang/Object;
      16: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      19: dreturn       

  public perf.abs2.VecNd compwise$mcD$sp(perf.abs2.VecNd, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0       
       1: invokevirtual #104                // Method dimens:()I
       4: aload_1       
       5: invokevirtual #104                // Method dimens:()I
       8: if_icmpeq     22
      11: new           #273                // class java/lang/IllegalArgumentException
      14: dup           
      15: ldc_w         #275                // String The number of dimensions for both vectors must be identical!
      18: invokespecial #278                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow        
      22: getstatic     #97                 // Field scala/Array$.MODULE$:Lscala/Array$;
      25: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      28: iconst_1      
      29: newarray       double
      31: dup           
      32: iconst_0      
      33: aload_0       
      34: invokevirtual #104                // Method dimens:()I
      37: i2d           
      38: dastore       
      39: invokevirtual #108                // Method scala/Predef$.wrapDoubleArray:([D)Lscala/collection/mutable/WrappedArray;
      42: getstatic     #113                // Field scala/reflect/Manifest$.MODULE$:Lscala/reflect/Manifest$;
      45: invokevirtual #117                // Method scala/reflect/Manifest$.Double:()Lscala/reflect/AnyValManifest;
      48: invokevirtual #120                // Method scala/Array$.apply:(Lscala/collection/Seq;Lscala/reflect/ClassManifest;)Ljava/lang/Object;
      51: checkcast     #121                // class "[D"
      54: astore_3      
      55: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      58: iconst_0      
      59: invokevirtual #125                // Method scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
      62: aload_0       
      63: invokevirtual #104                // Method dimens:()I
      66: invokevirtual #131                // Method scala/runtime/RichInt.until:(I)Lscala/collection/immutable/Range;
      69: new           #280                // class perf/abs2/VecNd$$anonfun$compwise$mcD$sp$1
      72: dup           
      73: aload_0       
      74: aload_3       
      75: aload_1       
      76: aload_2       
      77: invokespecial #283                // Method perf/abs2/VecNd$$anonfun$compwise$mcD$sp$1."<init>":(Lperf/abs2/VecNd;[DLperf/abs2/VecNd;Lscala/Function2;)V
      80: invokevirtual #143                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
      83: new           #82                 // class perf/abs2/VecNd
      86: dup           
      87: aload_3       
      88: invokespecial #146                // Method "<init>":([D)V
      91: areturn       

  public perf.abs2.Tuple compwise$mcD$sp(perf.abs2.Tuple, scala.Function2);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: aload_2       
       6: invokevirtual #181                // Method compwise$mcD$sp:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
       9: areturn       

  public perf.abs2.Tuple map$mcD$sp(scala.Function1);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #207                // Method map$mcD$sp:(Lscala/Function1;)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $div$mcD$sp(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #165                // Method $div$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $times$mcD$sp(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #202                // Method $times$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $minus$mcD$sp(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #199                // Method $minus$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $plus$mcD$sp(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #196                // Method $plus$mcD$sp:(D)Lperf/abs2/VecNd;
       5: areturn       

  public double dot$mcD$sp(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #170                // Method dot$mcD$sp:(Lperf/abs2/VecNd;)D
       8: dreturn       

  public perf.abs2.Tuple compwise(perf.abs2.Tuple, scala.Function2);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: aload_2       
       6: invokevirtual #290                // Method compwise:(Lperf/abs2/VecNd;Lscala/Function2;)Lperf/abs2/VecNd;
       9: areturn       

  public java.lang.Object reduce(scala.Function2);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #292                // Method reduce:(Lscala/Function2;)D
       5: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       8: areturn       

  public perf.abs2.Tuple map(scala.Function1);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokevirtual #298                // Method map:(Lscala/Function1;)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $div(java.lang.Object);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #301                // Method $div:(D)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $div(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #301                // Method $div:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $times(java.lang.Object);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #304                // Method $times:(D)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $times(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #304                // Method $times:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $minus(java.lang.Object);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #306                // Method $minus:(D)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $minus(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #306                // Method $minus:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $plus(java.lang.Object);
    Code:
       0: aload_0       
       1: aload_1       
       2: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       5: invokevirtual #308                // Method $plus:(D)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $plus(double);
    Code:
       0: aload_0       
       1: dload_1       
       2: invokevirtual #308                // Method $plus:(D)Lperf/abs2/VecNd;
       5: areturn       

  public perf.abs2.Tuple $div(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #311                // Method $div:(Lperf/abs2/VecNd;)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $times(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #313                // Method $times:(Lperf/abs2/VecNd;)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $minus(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #315                // Method $minus:(Lperf/abs2/VecNd;)Lperf/abs2/VecNd;
       8: areturn       

  public perf.abs2.Tuple $plus(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #317                // Method $plus:(Lperf/abs2/VecNd;)Lperf/abs2/VecNd;
       8: areturn       

  public java.lang.Object dot(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #320                // Method dot:(Lperf/abs2/VecNd;)D
       8: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: areturn       

  public double dot(perf.abs2.Tuple);
    Code:
       0: aload_0       
       1: aload_1       
       2: checkcast     #82                 // class perf/abs2/VecNd
       5: invokevirtual #320                // Method dot:(Lperf/abs2/VecNd;)D
       8: dreturn       

  public perf.abs2.Tuple normalized();
    Code:
       0: aload_0       
       1: invokevirtual #323                // Method normalized:()Lperf/abs2/VecNd;
       4: areturn       

  public java.lang.Object mag();
    Code:
       0: aload_0       
       1: invokevirtual #326                // Method mag:()D
       4: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       7: areturn       

  public java.lang.Object magSq();
    Code:
       0: aload_0       
       1: invokevirtual #328                // Method magSq:()D
       4: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       7: areturn       

  public perf.abs2.VecNd(double[]);
    Code:
       0: aload_0       
       1: aload_1       
       2: putfield      #84                 // Field elems:[D
       5: aload_0       
       6: invokespecial #333                // Method java/lang/Object."<init>":()V
       9: aload_0       
      10: invokestatic  #337                // Method perf/abs2/TupleOps$class.$init$:(Lperf/abs2/TupleOps;)V
      13: aload_0       
      14: invokestatic  #340                // Method perf/abs2/VecOps$class.$init$:(Lperf/abs2/VecOps;)V
      17: aload_0       
      18: invokestatic  #345                // Method perf/abs2/TupleOps$mcD$sp$class.$init$:(Lperf/abs2/TupleOps$mcD$sp;)V
      21: aload_0       
      22: invokestatic  #350                // Method perf/abs2/VecOps$mcD$sp$class.$init$:(Lperf/abs2/VecOps$mcD$sp;)V
      25: return        
}
