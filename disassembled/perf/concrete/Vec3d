Compiled from "Vec3d.scala"
public class perf.concrete.Vec3d implements scala.ScalaObject {
  public static final perf.concrete.Vec3d randomUnit();
    Code:
       0: getstatic     #11                 // Field perf/concrete/Vec3d$.MODULE$:Lperf/concrete/Vec3d$;
       3: invokevirtual #13                 // Method perf/concrete/Vec3d$.randomUnit:()Lperf/concrete/Vec3d;
       6: areturn       

  public static final perf.concrete.Vec3d random();
    Code:
       0: getstatic     #11                 // Field perf/concrete/Vec3d$.MODULE$:Lperf/concrete/Vec3d$;
       3: invokevirtual #16                 // Method perf/concrete/Vec3d$.random:()Lperf/concrete/Vec3d;
       6: areturn       

  public static final perf.concrete.Vec3d apply(double, double, double);
    Code:
       0: getstatic     #11                 // Field perf/concrete/Vec3d$.MODULE$:Lperf/concrete/Vec3d$;
       3: dload_0       
       4: dload_2       
       5: dload         4
       7: invokevirtual #20                 // Method perf/concrete/Vec3d$.apply:(DDD)Lperf/concrete/Vec3d;
      10: areturn       

  public static final perf.concrete.Vec3d apply(double);
    Code:
       0: getstatic     #11                 // Field perf/concrete/Vec3d$.MODULE$:Lperf/concrete/Vec3d$;
       3: dload_0       
       4: invokevirtual #23                 // Method perf/concrete/Vec3d$.apply:(D)Lperf/concrete/Vec3d;
       7: areturn       

  public double x();
    Code:
       0: aload_0       
       1: getfield      #33                 // Field x:D
       4: dreturn       

  public double y();
    Code:
       0: aload_0       
       1: getfield      #35                 // Field y:D
       4: dreturn       

  public double z();
    Code:
       0: aload_0       
       1: getfield      #37                 // Field z:D
       4: dreturn       

  public perf.concrete.Vec3d fromComps(double, double, double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: dload_1       
       5: dload_3       
       6: dload         5
       8: invokespecial #42                 // Method "<init>":(DDD)V
      11: areturn       

  public perf.concrete.Vec3d fromScalar(double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: dload_1       
       5: dload_1       
       6: dload_1       
       7: invokespecial #42                 // Method "<init>":(DDD)V
      10: areturn       

  public perf.concrete.Vec3d copy(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_1       
       5: invokevirtual #51                 // Method x:()D
       8: aload_1       
       9: invokevirtual #53                 // Method y:()D
      12: aload_1       
      13: invokevirtual #55                 // Method z:()D
      16: invokespecial #42                 // Method "<init>":(DDD)V
      19: areturn       

  public perf.concrete.Vec3d copy();
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: aload_0       
       9: invokevirtual #53                 // Method y:()D
      12: aload_0       
      13: invokevirtual #55                 // Method z:()D
      16: invokespecial #42                 // Method "<init>":(DDD)V
      19: areturn       

  public perf.concrete.Vec3d $plus(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: aload_1       
       9: invokevirtual #51                 // Method x:()D
      12: dadd          
      13: aload_0       
      14: invokevirtual #53                 // Method y:()D
      17: aload_1       
      18: invokevirtual #53                 // Method y:()D
      21: dadd          
      22: aload_0       
      23: invokevirtual #55                 // Method z:()D
      26: aload_1       
      27: invokevirtual #55                 // Method z:()D
      30: dadd          
      31: invokespecial #42                 // Method "<init>":(DDD)V
      34: areturn       

  public perf.concrete.Vec3d $minus(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: aload_1       
       9: invokevirtual #51                 // Method x:()D
      12: dsub          
      13: aload_0       
      14: invokevirtual #53                 // Method y:()D
      17: aload_1       
      18: invokevirtual #53                 // Method y:()D
      21: dsub          
      22: aload_0       
      23: invokevirtual #55                 // Method z:()D
      26: aload_1       
      27: invokevirtual #55                 // Method z:()D
      30: dsub          
      31: invokespecial #42                 // Method "<init>":(DDD)V
      34: areturn       

  public perf.concrete.Vec3d $times(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: aload_1       
       9: invokevirtual #51                 // Method x:()D
      12: dmul          
      13: aload_0       
      14: invokevirtual #53                 // Method y:()D
      17: aload_1       
      18: invokevirtual #53                 // Method y:()D
      21: dmul          
      22: aload_0       
      23: invokevirtual #55                 // Method z:()D
      26: aload_1       
      27: invokevirtual #55                 // Method z:()D
      30: dmul          
      31: invokespecial #42                 // Method "<init>":(DDD)V
      34: areturn       

  public perf.concrete.Vec3d $div(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: aload_1       
       9: invokevirtual #51                 // Method x:()D
      12: ddiv          
      13: aload_0       
      14: invokevirtual #53                 // Method y:()D
      17: aload_1       
      18: invokevirtual #53                 // Method y:()D
      21: ddiv          
      22: aload_0       
      23: invokevirtual #55                 // Method z:()D
      26: aload_1       
      27: invokevirtual #55                 // Method z:()D
      30: ddiv          
      31: invokespecial #42                 // Method "<init>":(DDD)V
      34: areturn       

  public perf.concrete.Vec3d $plus(double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: dload_1       
       9: dadd          
      10: aload_0       
      11: invokevirtual #53                 // Method y:()D
      14: dload_1       
      15: dadd          
      16: aload_0       
      17: invokevirtual #55                 // Method z:()D
      20: dload_1       
      21: dadd          
      22: invokespecial #42                 // Method "<init>":(DDD)V
      25: areturn       

  public perf.concrete.Vec3d $minus(double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: dload_1       
       9: dsub          
      10: aload_0       
      11: invokevirtual #53                 // Method y:()D
      14: dload_1       
      15: dsub          
      16: aload_0       
      17: invokevirtual #55                 // Method z:()D
      20: dload_1       
      21: dsub          
      22: invokespecial #42                 // Method "<init>":(DDD)V
      25: areturn       

  public perf.concrete.Vec3d $times(double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: dload_1       
       9: dmul          
      10: aload_0       
      11: invokevirtual #53                 // Method y:()D
      14: dload_1       
      15: dmul          
      16: aload_0       
      17: invokevirtual #55                 // Method z:()D
      20: dload_1       
      21: dmul          
      22: invokespecial #42                 // Method "<init>":(DDD)V
      25: areturn       

  public perf.concrete.Vec3d $div(double);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #51                 // Method x:()D
       8: dload_1       
       9: ddiv          
      10: aload_0       
      11: invokevirtual #53                 // Method y:()D
      14: dload_1       
      15: ddiv          
      16: aload_0       
      17: invokevirtual #55                 // Method z:()D
      20: dload_1       
      21: ddiv          
      22: invokespecial #42                 // Method "<init>":(DDD)V
      25: areturn       

  public double magSq();
    Code:
       0: aload_0       
       1: aload_0       
       2: invokevirtual #65                 // Method dot:(Lperf/concrete/Vec3d;)D
       5: dreturn       

  public double mag();
    Code:
       0: getstatic     #71                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: aload_0       
       4: invokevirtual #73                 // Method magSq:()D
       7: invokevirtual #77                 // Method scala/math/package$.sqrt:(D)D
      10: dreturn       

  public perf.concrete.Vec3d normalized();
    Code:
       0: aload_0       
       1: aload_0       
       2: invokevirtual #80                 // Method mag:()D
       5: invokevirtual #82                 // Method $div:(D)Lperf/concrete/Vec3d;
       8: areturn       

  public double dot(perf.concrete.Vec3d);
    Code:
       0: aload_0       
       1: invokevirtual #51                 // Method x:()D
       4: aload_1       
       5: invokevirtual #51                 // Method x:()D
       8: dmul          
       9: aload_0       
      10: invokevirtual #53                 // Method y:()D
      13: aload_1       
      14: invokevirtual #53                 // Method y:()D
      17: dmul          
      18: dadd          
      19: aload_0       
      20: invokevirtual #55                 // Method z:()D
      23: dadd          
      24: aload_1       
      25: invokevirtual #55                 // Method z:()D
      28: dadd          
      29: dreturn       

  public perf.concrete.Vec3d cross(perf.concrete.Vec3d);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_0       
       5: invokevirtual #53                 // Method y:()D
       8: aload_1       
       9: invokevirtual #55                 // Method z:()D
      12: dmul          
      13: aload_0       
      14: invokevirtual #55                 // Method z:()D
      17: aload_1       
      18: invokevirtual #53                 // Method y:()D
      21: dmul          
      22: dsub          
      23: aload_0       
      24: invokevirtual #55                 // Method z:()D
      27: aload_1       
      28: invokevirtual #51                 // Method x:()D
      31: dmul          
      32: aload_0       
      33: invokevirtual #51                 // Method x:()D
      36: aload_1       
      37: invokevirtual #55                 // Method z:()D
      40: dmul          
      41: dsub          
      42: aload_0       
      43: invokevirtual #51                 // Method x:()D
      46: aload_1       
      47: invokevirtual #53                 // Method y:()D
      50: dmul          
      51: aload_0       
      52: invokevirtual #53                 // Method y:()D
      55: aload_1       
      56: invokevirtual #51                 // Method x:()D
      59: dmul          
      60: dsub          
      61: invokespecial #42                 // Method "<init>":(DDD)V
      64: areturn       

  public perf.concrete.Vec3d map(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_1       
       5: aload_0       
       6: invokevirtual #51                 // Method x:()D
       9: invokeinterface #90,  3           // InterfaceMethod scala/Function1.apply$mcDD$sp:(D)D
      14: aload_1       
      15: aload_0       
      16: invokevirtual #53                 // Method y:()D
      19: invokeinterface #90,  3           // InterfaceMethod scala/Function1.apply$mcDD$sp:(D)D
      24: aload_1       
      25: aload_0       
      26: invokevirtual #55                 // Method z:()D
      29: invokeinterface #90,  3           // InterfaceMethod scala/Function1.apply$mcDD$sp:(D)D
      34: invokespecial #42                 // Method "<init>":(DDD)V
      37: areturn       

  public double reduce(scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1       
       1: aload_0       
       2: invokevirtual #51                 // Method x:()D
       5: aload_1       
       6: aload_0       
       7: invokevirtual #53                 // Method y:()D
      10: aload_0       
      11: invokevirtual #55                 // Method z:()D
      14: invokeinterface #102,  5          // InterfaceMethod scala/Function2.apply$mcDDD$sp:(DD)D
      19: invokeinterface #102,  5          // InterfaceMethod scala/Function2.apply$mcDDD$sp:(DD)D
      24: dreturn       

  public perf.concrete.Vec3d compwise(perf.concrete.Vec3d, scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    Code:
       0: new           #31                 // class perf/concrete/Vec3d
       3: dup           
       4: aload_2       
       5: aload_0       
       6: invokevirtual #51                 // Method x:()D
       9: aload_1       
      10: invokevirtual #51                 // Method x:()D
      13: invokeinterface #102,  5          // InterfaceMethod scala/Function2.apply$mcDDD$sp:(DD)D
      18: aload_2       
      19: aload_0       
      20: invokevirtual #53                 // Method y:()D
      23: aload_1       
      24: invokevirtual #53                 // Method y:()D
      27: invokeinterface #102,  5          // InterfaceMethod scala/Function2.apply$mcDDD$sp:(DD)D
      32: aload_2       
      33: aload_0       
      34: invokevirtual #55                 // Method z:()D
      37: aload_1       
      38: invokevirtual #55                 // Method z:()D
      41: invokeinterface #102,  5          // InterfaceMethod scala/Function2.apply$mcDDD$sp:(DD)D
      46: invokespecial #42                 // Method "<init>":(DDD)V
      49: areturn       

  public java.lang.String toString();
    Code:
       0: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: ldc           #116                // String Vec3d(%.2f, %.2f, %.2f)
       5: invokevirtual #120                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
       8: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_3      
      12: anewarray     #122                // class java/lang/Object
      15: dup           
      16: iconst_0      
      17: aload_0       
      18: invokevirtual #51                 // Method x:()D
      21: invokestatic  #128                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      24: aastore       
      25: dup           
      26: iconst_1      
      27: aload_0       
      28: invokevirtual #53                 // Method y:()D
      31: invokestatic  #128                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      34: aastore       
      35: dup           
      36: iconst_2      
      37: aload_0       
      38: invokevirtual #55                 // Method z:()D
      41: invokestatic  #128                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      44: aastore       
      45: invokevirtual #132                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      48: invokeinterface #138,  2          // InterfaceMethod scala/collection/immutable/StringLike.format:(Lscala/collection/Seq;)Ljava/lang/String;
      53: areturn       

  public perf.concrete.Vec3d(double, double, double);
    Code:
       0: aload_0       
       1: dload_1       
       2: putfield      #33                 // Field x:D
       5: aload_0       
       6: dload_3       
       7: putfield      #35                 // Field y:D
      10: aload_0       
      11: dload         5
      13: putfield      #37                 // Field z:D
      16: aload_0       
      17: invokespecial #141                // Method java/lang/Object."<init>":()V
      20: return        
}
